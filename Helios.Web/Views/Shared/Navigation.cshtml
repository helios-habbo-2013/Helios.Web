@using Helios.Web.Helpers
@using Helios.Storage;
@using Helios.Storage.Models.Site
@{
    bool isLoggedIn = ViewBag.LoggedIn;
    bool isErrorPage = ViewBag.ErrorStatus != null ? true : false;

    string currentHeader = ViewBag.Header;
    string currentPage = ViewBag.Page;

    string username = (ViewBag.Avatar != null ? ViewBag.Avatar.Name : "");
    int rank = (ViewBag.Avatar != null ? ViewBag.Avatar.Rank : 0);

    StorageContext ctx = ViewBag.StorageContext;
}

<div id="overlay"></div>
<div id="header-container">
    <div id="header" class="clearfix">
        <h1><a href="?p=index"></a></h1>
        @{
            if (!isLoggedIn)
            {
                <div id="subnavi">
                    <div id="subnavi-user">
                        <div class="clearfix">&nbsp;</div>
                        <p>
                            <a href="@Url.AbsolutePath("~/client")" id="enter-hotel-open-medium-link" target="client" onclick="HabboClient.openOrFocus(this); return false;">Enter Habbo Hotel</a>
                        </p>
                    </div>
                    <div id="subnavi-login">
                        <form action="@Url.AbsolutePath("~/account/submit")" method="post" id="login-form">
                            <input type="hidden" name="page" value="/community" />
                            <ul>
                                <li>
                                    <label for="login-username" class="login-text"><b>Username</b></label>
                                    <input tabindex="1" type="text" class="login-field" name="username" id="login-username" />
                                    <a href="#" id="login-submit-new-button" class="new-button" style="float: left; display:none"><b>Log in</b><i></i></a>
                                    <input type="submit" id="login-submit-button" value="Log in" class="submit" />
                                </li>
                                <li>
                                    <label for="login-password" class="login-text"><b>Password</b></label>
                                    <input tabindex="2" type="password" class="login-field" name="password" id="login-password" />
                                    <input tabindex="3" type="checkbox" name="_login_remember_me" value="true" id="login-remember-me" />
                                    <label for="login-remember-me" class="left">Remember me</label>
                                </li>
                            </ul>
                        </form>
                        <div id="subnavi-login-help" class="clearfix">
                            <ul>
                                <li class="register"><a href="@Url.AbsolutePath("~/account/password/forgot")" id="forgot-password"><span>I forgot my password/username</span></a></li>
                                <li><a href="@Url.AbsolutePath("~/register")"><span>Register</span></a></li>
                            </ul>
                        </div>
                        <div id="remember-me-notification" class="bottom-bubble" style="display:none;">
                            <div class="bottom-bubble-t">
                                <div></div>
                            </div>
                            <div class="bottom-bubble-c">
                                By selecting 'remember me' you will stay signed in on this computer until you click 'Sign Out'. If this is a public computer please do not use this feature.
                            </div>
                            <div class="bottom-bubble-b">
                                <div></div>
                            </div>
                        </div>
                    </div>
                </div>
                <script type="text/javascript">
                    LoginFormUI.init();
                    RememberMeUI.init("right");
                </script>
            }
            else
            {
                <div id="subnavi">
                    <div id="subnavi-user">
                        <ul>
                            <li id="myfriends"><a href="#"><span>My Friends</span></a><span class="r"></span></li>
                            <li id="mygroups"><a href="#"><span>My Groups</span></a><span class="r"></span></li>
                            <li id="myrooms"><a href="#"><span>My Rooms</span></a><span class="r"></span></li>
                        </ul>
                    </div>
                    <div id="subnavi-search">
                        <div id="subnavi-search-upper">

                            <ul id="subnavi-search-links">
                                <li><a href="@Url.AbsolutePath("~/help")" target="habbohelp" onclick="openOrFocusHelp(this); return false">Help</a></li>
                                <li><a href="@Url.AbsolutePath("~/account/logout")" class="userlink" id="signout">Sign Out</a></li>
                            </ul>
                        </div>
                    </div>
                    <div id="to-hotel">
                        <a href="@Url.AbsolutePath("~/client")" class="new-button green-button" target="client" onclick="HabboClient.openOrFocus(this); return false;">
                            <b>
                                Enter Habbo Hotel
                            </b><i></i>
                        </a>

                        <a href="@Url.AbsolutePath("~/housekeeping/login")" class="new-button red-button" style="margin-right: 5px;"><b>Housekeeping</b><i></i></a>
                    </div>
                </div>
                <script type="text/javascript">
                    L10N.put("purchase.group.title", "Create a Group");
                    document.observe("dom:loaded", function () {
                        $("signout").observe("click", function () {
                            HabboClient.close();
                        });
                    });
                </script>
            }
        }
        <ul id="navi">
            @{

                var headersData = ctx.PagesData.Where(x => x.ParentId == -1 && ((isLoggedIn && x.RequiresLogin) || (!isLoggedIn && x.RequiresLogout) || (!x.RequiresLogout && !x.RequiresLogin)) 
                        && rank >= x.MinimumRank)
                    .OrderBy(x => x.OrderId)
                    .ToList();

                var currentHeaderData = ctx.PagesData
                .Where(x => x.ParentId == -1 && x.Page == currentHeader && rank >= x.MinimumRank)
                    .FirstOrDefault();

                foreach (var headerData in headersData)
                {
                    string link = "";

                    if (headerData.Colour == PageColor.GREEN)
                        link = " id=\"tab-register-now\"";

                    if (headerData.Page == currentHeader)
                        link = " class=\" selected\"";


                    <li @Html.Raw(link)>
                        @{
                            if (headerData.Page == currentHeader)
                            {
                                if (headerData.Page == "me")
                                {
                                    <strong>@username ( <img src="@(this.ViewBag.StaticContentUrl)web-gallery/v2/images/rpx/icon_habbo_small.png" style="vertical-align: text-bottom" title="habbo" /> )</strong>			<span></span>
                                }
                                else
                                {
                                    <strong>@headerData.Label.Replace("{name}", username) </strong>			<span></span>
                                }
                            }
                            else
                            {
                                if (headerData.Page == "me")
                                {
                                    <a href="@Url.AbsolutePath("~" + headerData.Link)">@username ( <img src="@(this.ViewBag.StaticContentUrl)web-gallery/v2/images/rpx/icon_habbo_small.png" style="vertical-align: text-bottom" title="habbo" /> )</a>			<span></span>
                                }
                                else
                                {
                                    <a href="@Url.AbsolutePath("~" + headerData.Link.Replace("{name}", username))">@(headerData.Label.Replace("{name}", username))</a>			<span></span>
                                }
                            }
                        }
                    </li>
                }

                
        }
        </ul>
        <div id="habbos-online">
            <div class="rounded"><span>0 Habbos online</span></div>
        </div>
    </div>
</div>
<div id="content-container">
    @{
        if (!isErrorPage) 
        {
            <div id="navi2-container" class="pngbg">
                <div id="navi2" class="pngbg clearfix">
                    <ul>
                        @{
                            if (currentHeaderData != null)
                            {
                                var pagesData = ctx.PagesData.Where(x => x.ParentId == currentHeaderData.Id)
                                                        .OrderBy(x => x.OrderId)
                                                        .ToList();

                                var lastPage = pagesData.LastOrDefault();


                                foreach (var pageData in pagesData)
                                {
                                    string link = "";
                                    string classes = "";

                                    if (pageData.Page == currentPage)
                                        classes += " selected";

                                    if (lastPage?.Id == pageData.Id)
                                        classes += " last";

                                    if (!string.IsNullOrEmpty(classes))
                                        link = " class=\"" + classes + "\"";

                                    <li @Html.Raw(link)>
                                        @{
                                            if (pageData.Page == currentPage)
                                            {
                                                <strong>@pageData.Label </strong>			<span></span>
                                            }
                                            else
                                            {
                                                <a href="@Url.AbsolutePath("~" + pageData.Link.Replace("{name}", username))">@(pageData.Label.Replace("{name}", username))</a>			<span></span>
                                            }
                                        }
                                    </li>
                                }
                            }
                        }
                    </ul>
                </div>
            </div>
        }
    }
